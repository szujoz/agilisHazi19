<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_QrGenerated.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZAAAAGQAQMAAAC6caSPAAAABGdBTUEAALGPC/xhBQAAAAZQTFRF////
        AAAAVcLTfgAAA2pJREFUeNrtnD2O4zAMhV+QIqWPkKPkaPbRfJQcIWWKQbgS+UjJ2cF2k+UAVGVI/tRQ
        pPhnQ2x8oT1tuD4uXycRrD7Xnu7og3NtFPIRRCf0xTbuy1PXZQdfBLcBVp07FZIXaVJtk7p8u+Mirz63
        2zaIDTtybSeikPTIyXT64TJv49yVdrvdVeZSyG9BYNaZiNnkvrx16aspLiQ9MqnqwSb7Npz7zowXkgqx
        YZK+teWz2WReqvMcXy0kKTKGOriLUGlhF21DuOF3o5BMiL7yuKhUV7XJQ1Vf4JXrF62eg0KSIrTEXVVt
        GRrJ7FjEvSd5qqeEcQ4K+XFEVERiGggsT9DZsSe7Ic8iI1lQSFIEKlUuq34afDX91FizkN+CgEo7jXWP
        p/aiJfPa1hq0FJIVafb3yttQIu/jaQNVc1wiG9vPRiFJEbFhMeR+pUpb5nXElSZ9gwtJjTzpo7qqmvrC
        PVh6T7ZNIUkRhKqC9ZDTlAU4GG+9aF+FpEXQldZ8IV3ucsahXnlQZF7DhSRETPqqzpv6THoiwBxs31A0
        uumIrRbyAYQGFgdTq8PSOf4k77nxQrIhrA+79Dm8YjVpJbcuJC0iFoz45OO9JcCrWKrSulpIUsSjSU/X
        maFeJwc34krdGoUkRvYpSbdQY6OOrNv0Ab1ovwpJi4hVPMTiymjK0RlWjx9+SPyUFJIS4YjEHcMSDC0f
        fpT7yYXkRExpVfzrbkrLGskUv3AbtuwUkhTZ2qS35yC6O+auZPOPAN+wkI8gnmfj07G4ganMwUaOQnIi
        EsUNhhvxourfiDoxdREUkhGxyDHSdf4UJ8JvSLpHo7enkGwIFfSsEu6WWMIBgndfTR2qFowUkhMBZT4C
        D8j4xkovWk+ntxmLXwrJiDDzemgE0G2eHmHGFx5WQSkkKcIXTb6RuDu0ZLkjLNFsXEhKhPY3LlA9Ep73
        IcQq82jTKiQhIsf+jYXdV36Vsk3g5XOFfAjxcQhGmBun2wPXWU+nF5IScUlbmcNlHs5OnAM5VLEKyYio
        7Ofq1Otd+h5XopDkyDoqUW6TWbESerXwU8LEXSHZEX7eP2JIVen4PQ787yqFpEdm6Y+WgFvPBfk2/1Lk
        Qv470ofaX1jbcfeEt+miHSfCc0GF5EToC9FTcvdp94s2PhDAX99YFZIIeeEPxGyA6UwjFPEAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>